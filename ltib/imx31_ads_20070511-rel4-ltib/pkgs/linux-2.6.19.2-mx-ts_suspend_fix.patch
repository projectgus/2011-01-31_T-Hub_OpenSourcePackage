Bugzilla 365.  Changes to allow the mxc_ts kernel thread to be suspended via
DPM.  Convert wait_for_completion() to wait_for_completion_interruptible()
to allow it to be interrupted.  Change the kernel thread to daemonize() the
thread and name it 'mxc_ts'.  Also in the loop call try_to_freeze() to
check if the thread needs to be suspended.

cvs diff -puN -r1.2 -r1.3 drivers/input/touchscreen/mxc_ts.c
Index: drivers/input/touchscreen/mxc_ts.c
===================================================================
RCS file: /cvs/local/ltib/imx27ads/linux-2.6.19/drivers/input/touchscreen/mxc_ts.c,v
retrieving revision 1.2
retrieving revision 1.3
diff -p -u -r1.2 -r1.3
--- linux-2.6.19.2/drivers/input/touchscreen/mxc_ts.c	15 Jan 2007 05:53:15 -0000	1.2
+++ linux-2.6.19.2-mx/drivers/input/touchscreen/mxc_ts.c	24 Jan 2007 02:33:47 -0000	1.3
@@ -44,7 +44,9 @@ static int ts_thread(void *arg)
 {
 	t_touch_screen ts_sample;
 	s32 wait = 0;
+	daemonize("mxc_ts");
 	while (input_ts_installed) {
+		try_to_freeze();
 		memset(&ts_sample, 0, sizeof(t_touch_screen));
 		pmic_adc_get_touch_sample(&ts_sample, !wait);
 
cvs diff -puN -r1.2 -r1.3 drivers/mxc/pmic/mc13783/pmic_adc.c
Index: drivers/mxc/pmic/mc13783/pmic_adc.c
===================================================================
RCS file: /cvs/local/ltib/imx27ads/linux-2.6.19/drivers/mxc/pmic/mc13783/pmic_adc.c,v
retrieving revision 1.2
retrieving revision 1.3
diff -p -u -r1.2 -r1.3
--- linux-2.6.19.2/drivers/mxc/pmic/mc13783/pmic_adc.c	16 Jan 2007 22:55:17 -0000	1.2
+++ linux-2.6.19.2-mx/drivers/mxc/pmic/mc13783/pmic_adc.c	24 Jan 2007 02:33:47 -0000	1.3
@@ -562,7 +562,7 @@ PMIC_STATUS mc13783_adc_convert(t_adc_pa
 			    (REG_ADC_1, adc_1_reg, PMIC_ALL_BITS));
 		pr_debug("wait tsi ....\n");
 		wait_ts = true;
-		wait_for_completion(&adc_tsi);
+		wait_for_completion_interruptible(&adc_tsi);
 		wait_ts = false;
 	}
 	use_bis = mc13783_adc_request();
@@ -643,7 +643,7 @@ PMIC_STATUS mc13783_adc_convert(t_adc_pa
 					   ADC_NO_ADTRIG | ADC_EN |
 					   ADC_DELAY_MASK | ASC_ADC | ADC_BIS));
 		pr_debug("wait adc done \n");
-		wait_for_completion(&adcdone_it);
+		wait_for_completion_interruptible(&adcdone_it);
 		data_ready_adc_1 = false;
 	} else {
 		data_ready_adc_2 = false;
@@ -657,7 +657,7 @@ PMIC_STATUS mc13783_adc_convert(t_adc_pa
 		pmic_write_reg(REG_ARBITRATION_PERIPHERAL_AUDIO, temp,
 			       0xFFFFFF);
 		pr_debug("wait adc done bis\n");
-		wait_for_completion(&adcbisdone_it);
+		wait_for_completion_interruptible(&adcbisdone_it);
 		data_ready_adc_2 = false;
 	}
 	/* read result and store in adc_param */
