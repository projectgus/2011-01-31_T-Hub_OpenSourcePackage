#!/bin/sh -e

supported_kernel() {
  case "$(uname -r)" in
    2.[012345].*|2.6.[0-9]|2.6.[0-9][!0-9]*) return 1 ;;
    2.6.1[01]|2.6.1[01][!0-9]*) return 1 ;;
  esac
  return 0
}

check_kernel_version() {
  # skip the check if udev is not already active
  [ -d /dev/.udev/ ] || return 0

  supported_kernel && return

  if [ -e /etc/udev/kernel-upgrade ]; then
    echo "This version of udev requires a kernel >= 2.6.12, but the upgrade was forced."
    # restart udevd which was killed by the old prerm
    /sbin/udevd -d || true
    return 0
  fi

cat <<ERR

*****************************************************************************

This version of udev requires a kernel >= 2.6.12, upgrade aborted.

You can upgrade the kernel at the same time by creating the file
/etc/udev/kernel-upgrade and then trying again, e.g.:

# touch /etc/udev/kernel-upgrade
# apt-get install udev initramfs-tools linux-image-2.6-k7-smp

After upgrading udev this way you should reboot as soon as possible.

If you will reboot before the new kernel will have been properly
installed then udev will not be started, possibly breaking the system
or even making it unbootable!

*****************************************************************************

ERR

  exit 1
}

have_rules_link() {
  local arg="$1"

  local link
  for link in /etc/udev/rules.d/*.rules; do
    test -L $link || continue
    local target=$(readlink --quiet --canonicalize $link)
    if [ "$target" = "/etc/udev/$arg" ]; then
      echo "$link"
      return
    fi
  done
}

# create a new link in rules.d/ if it does not already exist
add_rules_link() {
  local name=$1
  local target=${name#*_}

  [ -e /etc/udev/rules.d/$name -o -L /etc/udev/rules.d/$name ] || \
    ln -s ../$target /etc/udev/rules.d/$name
}

rm_conffile() {
  local name="$1"
  local oldmd5="$2"

  [ -e "$name" ] || return 0

  local md5="$(md5sum $name | sed -e 's/ .*//')"
  if [ "$md5" = "$oldmd5" ]; then
    rm -f $name
  fi
}

check_version() {
  [ "$2" ] || return 0

  dpkg --compare-versions $2 lt 0.090-1 || return 0
  add_rules_link z45_persistent-net-generator.rules
  : > /etc/udev/run-write_net_rules

  dpkg --compare-versions $2 lt 0.088-1 || return 0
  add_rules_link z20_persistent-input.rules

  dpkg --compare-versions $2 lt 0.084-4 || return 0
  # delete an example conffile which was installed by some old versions
  rm_conffile /etc/scsi_id.config a1e107dda17adaa2063b139ef50a428c

  dpkg --compare-versions $2 lt 0.080-1 || return 0
  [ -e /etc/rcS.d/S04udev ] && mv /etc/rcS.d/S04udev /etc/rcS.d/S03udev

  dpkg --compare-versions $2 lt 0.076-1 || return 0
  if [ -d /dev/.udevdb/ -a ! -d /dev/.udev/db/ ]; then
    mkdir -p /dev/.udev/
    mv /dev/.udevdb /dev/.udev/db
    mkdir -p /dev/.udevdb/
  fi

  dpkg --compare-versions $2 lt 0.072-1 || return 0
  rm -f /etc/udev/scripts/scsi-devfs.sh /etc/udev/scripts/ide-devfs.sh \
	/etc/udev/scripts/raid-devfs.sh /etc/udev/scripts/inputdev.sh

  dpkg --compare-versions $2 lt 0.070-3 || return 0
  add_rules_link z55_hotplug.rules

  dpkg --compare-versions $2 lt 0.070-1 || return 0
  CD_RULES=$(have_rules_link simple-cd-aliases.rules)
  if [ "$CD_RULES" ]; then
    rm -f $CD_RULES
    add_rules_link cd-aliases.rules
  fi
  rm -f /etc/udev/scripts/dvb.sh /etc/udev/scripts/ide-model.sh \
	/etc/udev/cdsymlinks.conf /etc/udev/scripts/cdsymlinks.sh \
	/etc/udev/simple-cd-aliases.rules

  dpkg --compare-versions $2 lt 0.066-1 || return 0
  add_rules_link z20_persistent.rules

  dpkg --compare-versions $2 lt 0.060-1 || return 0
  # refuse to upgrade if udev would stop working after the first reboot
  check_kernel_version
  add_rules_link z50_run.rules
  add_rules_link z70_hotplugd.rules
  rm -f /etc/dev.d/net/hotplug.dev /etc/udev/udev.permissions

  dpkg --compare-versions $2 lt 0.056-2 || return 0
  add_rules_link 020_permissions.rules

  if dpkg --compare-versions $2 lt 0.046-1; then
    echo 'Upgrading from packages older than 0.046-1 is not supported.'
    echo 'Please purge udev before installing this package.'
    exit 1
  fi
  if dpkg --compare-versions $2 lt 0.046-4; then
    mkdir -p /etc/udev/scripts/
    for file in cdsymlinks.sh dvb.sh ide-devfs.sh inputdev.sh scsi-devfs.sh; do
      if [ -f /etc/udev/$file -a ! -f /etc/udev/scripts/$file ]; then
	mv -f /etc/udev/$file /etc/udev/scripts/
      fi
    done
  fi
  if dpkg --compare-versions $2 lt 0.046-5; then
    CD_RE='^KERNEL="(hd[a-z]|sr[0-9]*|pcd[0-9]*)",[[:space:]]*PROGRAM="/etc/udev/scripts/cdsymlinks.sh %k"'
    if LC_COLLATE=C grep --no-messages -q -E $CD_RE /etc/udev/rules.d/* \
	&& [ ! -e /etc/udev/rules.d/cd-aliases.rules ]; then
      ln -s ../cd-aliases.rules /etc/udev/rules.d/cd-aliases.rules
    fi
  fi
  if dpkg --compare-versions $2 lt 0.048-2; then
    # refuse to upgrade if udev would stop working after the first reboot
    check_kernel_version
  fi
  if dpkg --compare-versions $2 lt 0.054-3; then
    if [ -d /.dev/ -a -d /dev/.udevdb/ ]; then
      mkdir -p /dev/.static/dev/
      chmod 700 /dev/.static/
      mount -n --move /.dev/ /dev/.static/dev/ || true
      rmdir /.dev/ || true
    fi
  fi
}

disable_hotplug() {
    # ugly, but what else could I do?
    if [ -e /etc/hotplug.d/default/default.hotplug ]; then
	rm -f /etc/hotplug.d/default/default.hotplug
    fi
    if [ -e /etc/init.d/hotplug ]; then
	echo
	echo "**************************************************************"
	echo "* Please purge the hotplug package!"
        echo "* (/etc/init.d/hotplug has been found on this system)"
	echo "**************************************************************"
	echo
    fi
}

case "$1" in
    install)
    # $2 is non-empty when installing from the "config-files" state
    check_version "$@"
    disable_hotplug
    ;;

    upgrade|abort-upgrade)
    check_version "$@"
    disable_hotplug
    ;;

    *)
    echo "$0 called with unknown argument '$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

