#!/bin/sh -e

RULES_FILE="/etc/udev/rules.d/z25_persistent-cd.rules"

. /lib/udev/hotplug.functions

##############################################################################
find_next_available() {
  raw_find_next_available "$(find_all_rules 'SYMLINK+?=' $1)"
}

write_rule() {
  local match="$1"
  local link="$2"
  local comment="$3"

  {
  if [ "$PRINT_HEADER" ]; then
    PRINT_HEADER=
    echo "# This file was automatically generated by the $0"
    echo "# program, probably run by the cd-aliases-generator.rules rules file."
    echo "#"
    echo "# You can modify it, as long as you keep each rule on a single line"
    echo "# and set the \$GENERATED variable."
    echo ""
  fi

  [ "$comment" ] && echo "# $comment"
  echo "ACTION==\"add\", $match, SYMLINK+=\"$link\", ENV{GENERATED}=\"1\""
  } >> $RULES_FILE
  SYMLINKS="$SYMLINKS $link"
}

##############################################################################
if [ -z "$DEVPATH" ]; then
  echo "Missing \$DEVPATH." >&2
  exit 1
fi
if [ -z "$ID_CDROM" ]; then
  echo "$DEVPATH is not a CD reader." >&2
  exit 1
fi

# Prevent concurrent processes from modifying the file at the same time.
lock_rules_file

# Check if the rules file is writeable.
choose_rules_file

link_num=$(find_next_available 'cdrom[0-9]*')

if [ "$PHYSDEVBUS" = "ide" ]; then
  id=${PHYSDEVPATH##*/}
  match="BUS==\"$PHYSDEVBUS\", ID==\"$id\""
else
  match="ENV{ID_PATH}==\"$ID_PATH\""
fi

comment="$ID_MODEL ($ID_PATH)"

    write_rule "$match" "cdrom$link_num" "$comment"
[ "$ID_CDROM_CD_R" -o "$ID_CDROM_CD_RW" ] && \
    write_rule "$match" "cdrw$link_num"
[ "$ID_CDROM_DVD" ] && \
    write_rule "$match" "dvd$link_num"
[ "$ID_CDROM_DVD_R" -o "$ID_CDROM_DVD_RW" -o "$ID_CDROM_DVD_RAM" ] && \
    write_rule "$match" "dvdrw$link_num"

unlock_rules_file

echo $SYMLINKS

exit 0

