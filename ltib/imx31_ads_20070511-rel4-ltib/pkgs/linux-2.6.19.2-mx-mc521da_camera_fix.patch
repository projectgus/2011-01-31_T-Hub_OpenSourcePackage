CR: TLSbo92102
Patch name: TLSbo92102_fix_mc521da_camera.patch
Date: Mon Mar 5 15:55:36 2007 -0600
Source: Freescale Semiconductor, Inc.
Description: fixed i2c, gpio setting for mc521da camera.
===================================================================
diff -uNpr linux-2.6.19.2.orig/arch/arm/mach-mx27/mx27ads_gpio.c linux-2.6.19.2/arch/arm/mach-mx27/mx27ads_gpio.c
--- linux-2.6.19.2.orig/arch/arm/mach-mx27/mx27ads_gpio.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/arch/arm/mach-mx27/mx27ads_gpio.c	2007-04-25 17:38:22.000000000 -0600
@@ -507,7 +507,11 @@ void gpio_sensor_active(void)
 	gpio_request_mux(MX27_PIN_CSI_VSYNC, GPIO_MUX_PRIMARY);
 	gpio_request_mux(MX27_PIN_CSI_HSYNC, GPIO_MUX_PRIMARY);
 
+#ifdef CONFIG_MXC_CAMERA_MC521DA
+	__raw_writew(0x100, PBC_BCTRL2_SET_REG);
+#else
 	__raw_writew(0x400, PBC_BCTRL2_SET_REG);
+#endif
 }
 
 void gpio_sensor_inactive(void)
@@ -525,7 +529,24 @@ void gpio_sensor_inactive(void)
 	gpio_free_mux(MX27_PIN_CSI_VSYNC);
 	gpio_free_mux(MX27_PIN_CSI_HSYNC);
 
+#ifdef CONFIG_MXC_CAMERA_MC521DA
+	__raw_writew(0x100, PBC_BCTRL2_CLEAR_REG);
+#else
 	__raw_writew(0x400, PBC_BCTRL2_CLEAR_REG);
+#endif
+}
+
+void gpio_sensor_reset(bool flag)
+{
+	u16 temp;
+
+	if (flag) {
+		temp = 0x200;
+		__raw_writew(temp, PBC_BASE_ADDRESS + PBC_BCTRL1_CLEAR);
+	} else {
+		temp = 0x200;
+		__raw_writew(temp, PBC_BASE_ADDRESS + PBC_BCTRL1_SET);
+	}
 }
 
 /*!
@@ -1149,6 +1170,7 @@ EXPORT_SYMBOL(gpio_nand_active);
 EXPORT_SYMBOL(gpio_nand_inactive);
 EXPORT_SYMBOL(gpio_sensor_active);
 EXPORT_SYMBOL(gpio_sensor_inactive);
+EXPORT_SYMBOL(gpio_sensor_reset);
 EXPORT_SYMBOL(gpio_lcdc_active);
 EXPORT_SYMBOL(gpio_lcdc_inactive);
 EXPORT_SYMBOL(gpio_fs453_reset_low);
diff -uNpr linux-2.6.19.2.orig/drivers/media/video/mxc/capture/mc521da.c linux-2.6.19.2/drivers/media/video/mxc/capture/mc521da.c
--- linux-2.6.19.2.orig/drivers/media/video/mxc/capture/mc521da.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/drivers/media/video/mxc/capture/mc521da.c	2007-04-25 17:38:22.000000000 -0600
@@ -27,6 +27,7 @@
 #include <linux/delay.h>
 #include <linux/device.h>
 #include <linux/i2c.h>
+#include <linux/clk.h>
 #include <asm/arch/mxc_i2c.h>
 #include "mxc_v4l2_capture.h"
 
@@ -579,18 +580,17 @@ struct camera_sensor camera_sensor_if = 
 };
 
 /*!
- * mc521da I2C attach function
+ * mc521da I2C detect_client function
  *
  * @param adapter            struct i2c_adapter *
+ * @param address            int
+ * @param kind               int
+ * 
  * @return  Error code indicating success or failure
  */
-static int mc521da_attach(struct i2c_adapter *adapter)
+static int mc521da_detect_client(struct i2c_adapter *adapter, int address,
+				 int kind)
 {
-	if (strcmp(adapter->name, MXC_ADAPTER_NAME) != 0) {
-		printk(KERN_ERR "mc521da_attach: %s\n", adapter->name);
-		return -1;
-	}
-
 	mc521da_i2c_client.adapter = adapter;
 	if (i2c_attach_client(&mc521da_i2c_client)) {
 		mc521da_i2c_client.adapter = NULL;
@@ -606,9 +606,40 @@ static int mc521da_attach(struct i2c_ada
 	}
 
 	interface_param->mclk = 25000000;
+
+	printk(KERN_INFO "mc521da Detected\n");
+
 	return 0;
 }
 
+static unsigned short normal_i2c[] = { MC521DA_I2C_ADDRESS, I2C_CLIENT_END };
+
+/* Magic definition of all other variables and things */
+I2C_CLIENT_INSMOD;
+
+static int mc521da_attach(struct i2c_adapter *adap)
+{
+	uint32_t mclk = 25000000;
+	struct clk *clk;
+	int err;
+
+	clk = clk_get(NULL, "csi_clk");
+	clk_enable(clk);
+	set_mclk_rate(&mclk);
+
+	gpio_sensor_reset(true);
+	msleep(10);
+	gpio_sensor_reset(false);
+	msleep(100);
+
+	err = i2c_probe(adap, &addr_data, &mc521da_detect_client);
+
+	clk_disable(clk);
+	clk_put(clk);
+
+	return err;
+}
+
 /*!
  * mc521da I2C detach function
  *
diff -uNpr linux-2.6.19.2.orig/drivers/media/video/mxc/capture/mt9v111.c linux-2.6.19.2/drivers/media/video/mxc/capture/mt9v111.c
--- linux-2.6.19.2.orig/drivers/media/video/mxc/capture/mt9v111.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/drivers/media/video/mxc/capture/mt9v111.c	2007-04-25 17:38:22.000000000 -0600
@@ -577,9 +577,12 @@ static void mt9v111_test_pattern(bool fl
 #endif
 
 /*!
- * mt9v111 I2C attach function
+ * mt9v111 I2C detect_client function
  *
  * @param adapter            struct i2c_adapter *
+ * @param address            int
+ * @param kind               int
+ * 
  * @return  Error code indicating success or failure
  */
 static int mt9v111_detect_client(struct i2c_adapter *adapter, int address,
diff -uNpr linux-2.6.19.2.orig/drivers/media/video/mxc/capture/sensor_clock.c linux-2.6.19.2/drivers/media/video/mxc/capture/sensor_clock.c
--- linux-2.6.19.2.orig/drivers/media/video/mxc/capture/sensor_clock.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/drivers/media/video/mxc/capture/sensor_clock.c	2007-04-25 17:38:22.000000000 -0600
@@ -39,12 +39,9 @@ void set_mclk_rate(uint32_t * p_mclk_fre
 
 	clk = clk_get(NULL, "csi_clk");
 
-	/* clk_round_rate rounds down, but we need it rounded up
-	 * So we try 9 steps up to 2x the requested freq.
-	 */
 	for (i = 0; i <= 8; i++) {
-		freq = clk_round_rate(clk, *p_mclk_freq + (i * step));
-		if (freq >= *p_mclk_freq)
+		freq = clk_round_rate(clk, *p_mclk_freq - (i * step));
+		if (freq <= *p_mclk_freq)
 			break;
 	}
 	clk_set_rate(clk, freq);
