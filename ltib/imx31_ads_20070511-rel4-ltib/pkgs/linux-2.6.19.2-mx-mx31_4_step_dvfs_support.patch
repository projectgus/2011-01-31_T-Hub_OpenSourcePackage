CR: TLSbo91040
Patch name: TLSbo91040_4_step_DVFS_support_for_MX31_Rev_2.patch
Date: Fri Feb 23 12:40:28 2007 -0600
Source: Freescale Semiconductor, Inc.
Description: 4 step DVFS support for MX312.0
===================================================================
diff -uNpr linux-2.6.19.2.orig/arch/arm/mach-mx3/crm_regs.h linux-2.6.19.2/arch/arm/mach-mx3/crm_regs.h
--- linux-2.6.19.2.orig/arch/arm/mach-mx3/crm_regs.h	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/arch/arm/mach-mx3/crm_regs.h	2007-04-25 17:37:52.000000000 -0600
@@ -286,6 +286,9 @@
 #define MXC_CCM_PMCR1_DVGP_OFFSET               0
 #define MXC_CCM_PMCR1_DVGP_MASK                 (0xF)
 
+#define MXC_CCM_PMCR1_PLLRDIS                      (0x1 << 7)
+#define MXC_CCM_PMCR1_EMIRQ_EN                      (0x1 << 8)
+
 #define MXC_CCM_DCVR_ULV_MASK                   (0x3FF << 22)
 #define MXC_CCM_DCVR_ULV_OFFSET                 22
 #define MXC_CCM_DCVR_LLV_MASK                   (0x3FF << 12)
diff -uNpr linux-2.6.19.2.orig/arch/arm/mach-mx3/dvfs.c linux-2.6.19.2/arch/arm/mach-mx3/dvfs.c
--- linux-2.6.19.2.orig/arch/arm/mach-mx3/dvfs.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/arch/arm/mach-mx3/dvfs.c	2007-04-25 17:37:52.000000000 -0600
@@ -45,6 +45,8 @@
 #include <asm/semaphore.h>
 #include <linux/jiffies.h>
 #include <linux/device.h>
+#include <linux/delay.h>
+#include <asm/arch/clock.h>
 #include <asm/arch/gpio.h>
 #include <asm/arch/sdma.h>
 #include <linux/dma-mapping.h>
@@ -97,6 +99,21 @@ pmcr0 = ((pmcr0 & ~MXC_CCM_PMCR0_DFSUP1)
 #define SET_VSCNT(pmcr0, x) \
 pmcr0 = ((pmcr0 & ~MXC_CCM_PMCR0_VSCNT_MASK) | x << MXC_CCM_PMCR0_VSCNT_OFFSET)
 
+/*
+ * Clear DPVCR bit
+ */
+#define CLEAR_DPVCR(pmcr0) pmcr0 &= ~MXC_CCM_PMCR0_DPVCR
+
+/*
+ * Set DPVCR bit
+ */
+#define SET_DPVCR(pmcr0) pmcr0 |= MXC_CCM_PMCR0_DPVCR
+
+/*
+ * Set DPVCR bit
+ */
+#define SET_DPVV(pmcr0) pmcr0 |= MXC_CCM_PMCR0_DPVV
+
 dvfs_states_table *dvfs_states_tbl;
 
 /*!
@@ -500,6 +517,21 @@ int __init init_dvfs_controller(dvfs_dpt
 
 	dvfs_dptc_params = params;
 
+	if (system_rev >= CHIP_REV_2_0) {
+		/* Rev2.0 changes */
+
+		/* Disable PLL restart on DVFS switch */
+		mxc_ccm_modify_reg(MXC_CCM_PMCR1, MXC_CCM_PMCR1_PLLRDIS,
+				   MXC_CCM_PMCR1_PLLRDIS);
+
+		/* Enable automatic EMI handshake */
+		mxc_ccm_modify_reg(MXC_CCM_PMCR1, MXC_CCM_PMCR1_EMIRQ_EN,
+				   MXC_CCM_PMCR1_EMIRQ_EN);
+
+		/* Init SR PLL for 399MHz */
+		mxc_ccm_modify_reg(MXC_CCM_SRPCTL, 0xffffffff, 0x00331c23);
+	}
+
 	if (res == 0) {
 		printk(KERN_INFO "DVFS controller initialized\n");
 	}
@@ -536,21 +568,17 @@ void dvfs_update_freqs_table(dvfs_dptc_t
 	pll = table[0].pll_up;
 	pdr0 = table[0].pdr0_up;
 	freq = dvfs_get_clock(table[0].pll_up, table[0].pdr0_up);
-	dvfs_states_tbl->freqs[0] = 1000000 * (freq / 1000000);
+	dvfs_states_tbl->freqs[0] = freq;
 
 	for (i = 0; i < dvfs_dptc_tables_ptr->dvfs_state_num - 1; i++) {
+
 		if (table[i].pll_sw_down == 1) {
 			pll = table[i].pll_down;
 		}
 		pdr0 = table[i].pdr0_down;
 
 		freq = dvfs_get_clock(pll, pdr0);
-		dvfs_states_tbl->freqs[i + 1] = 1000000 * (freq / 1000000);
-	}
-
-	for (i = 0; i < dvfs_dptc_tables_ptr->dvfs_state_num; i++) {
-		printk(KERN_INFO "DVFS frequency #%d: %d\n", i,
-		       dvfs_states_tbl->freqs[i]);
+		dvfs_states_tbl->freqs[i + 1] = freq;
 	}
 }
 
@@ -642,8 +670,10 @@ void set_freq(dvfs_dptc_params_s * param
 	int dfsup0, dfsup1;
 	dvfs_state *table;
 	unsigned long pmcr0;
+	int dptc_enable = 0;
 
 	pmcr0 = mxc_ccm_get_reg(MXC_CCM_PMCR0);
+	dptc_enable = pmcr0 & MXC_CCM_PMCR0_DPTEN;
 
 	/* Read DVSUP - current frequency index */
 	dvsup = dvfs_get_dvsup();
@@ -655,16 +685,15 @@ void set_freq(dvfs_dptc_params_s * param
 	table = sdma_phys_to_virt((unsigned long)table);
 #endif
 
+	if (dptc_enable) {
+		CLEAR_DPVCR(pmcr0);
+	}
 	if (fsvai == DVFS_DECREASE) {
 		/* On DVFS_DECREASE event the frequency will be changed according
 		 * to the next state setting
 		 */
 		CLEAR_UDSC(pmcr0);
-		if (params->dvfs_dptc_tables_ptr->use_four_freq) {
-			dvsup++;
-		} else {
-			dvsup = 0x3;
-		}
+		dvsup++;
 		SET_VSCNT(pmcr0, 1);
 		pll_switch = table[curr_freq_index].pll_sw_down;
 		pdr0 = table[curr_freq_index].pdr0_down;
@@ -706,6 +735,8 @@ void set_freq(dvfs_dptc_params_s * param
 	SET_DFSUP1(pmcr0, dfsup1);
 
 	mxc_ccm_modify_reg(MXC_CCM_PMCR0, 0xffffffff, pmcr0);
+	/* software wait for voltage ramp-up */
+	udelay(100);
 	mxc_ccm_modify_reg(MXC_CCM_PDR0, 0xffffffff, pdr0);
 
 	if (pll_switch == 1) {
@@ -718,6 +749,13 @@ void set_freq(dvfs_dptc_params_s * param
 		}
 	}
 
+	if (dptc_enable) {
+		pmcr0 = mxc_ccm_get_reg(MXC_CCM_PMCR0);
+		SET_DPVCR(pmcr0);
+		SET_DPVV(pmcr0);
+		mxc_ccm_modify_reg(MXC_CCM_PMCR0, 0xffffffff, pmcr0);
+	}
+
 	pr_debug(KERN_INFO "ARM frequency: %dMHz CKIH frequency: %dMHz(%d)\n",
 		 (int)mxc_get_clocks(CPU_CLK) / 1000000,
 		 (int)mxc_get_clocks(CKIH_CLK) / 1000000, (int)jiffies);
diff -uNpr linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc.c linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc.c
--- linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc.c	2007-04-25 17:37:51.000000000 -0600
+++ linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc.c	2007-04-25 17:37:52.000000000 -0600
@@ -429,12 +429,18 @@ static int __init dvfs_dptc_init_default
 
 	table_str = default_table_str;
 	if (cpu_is_mx31()) {
-		clk = clk_get(NULL, "ckih");
-		if (clk_get_rate(clk) == 27000000) {
-			printk(KERN_INFO
-			       "DVFS & DPTC: using 27MHz CKIH table\n");
+		if (system_rev < CHIP_REV_2_0) {
+			clk = clk_get(NULL, "ckih");
+			if (clk_get_rate(clk) == 27000000) {
+				printk(KERN_INFO
+				       "DVFS & DPTC: using 27MHz CKIH table\n");
 #ifdef CONFIG_ARCH_MX3
-			table_str = default_table_str_27ckih;
+				table_str = default_table_str_27ckih;
+#endif
+			}
+		} else {
+#ifdef CONFIG_ARCH_MX3
+			table_str = default_table_str_rev2;
 #endif
 		}
 		clk_put(clk);
diff -uNpr linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc.h linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc.h
--- linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc.h	2007-04-25 17:28:14.000000000 -0600
+++ linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc.h	2007-04-25 17:37:52.000000000 -0600
@@ -34,6 +34,7 @@
 #ifdef CONFIG_ARCH_MX3
 #include "dvfs_dptc_table_mx31.h"
 #include "dvfs_dptc_table_mx31_27ckih.h"
+#include "dvfs_dptc_table_mx31_rev2.h"
 #endif
 #ifdef CONFIG_ARCH_MX27
 #include "dvfs_dptc_table_mx27.h"
diff -uNpr linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc_table_mx31.h linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc_table_mx31.h
--- linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc_table_mx31.h	2007-04-25 17:28:14.000000000 -0600
+++ linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc_table_mx31.h	2007-04-25 17:37:52.000000000 -0600
@@ -21,7 +21,7 @@
  */
 
 /*!
- * @file dptc.h
+ * @file dvfs_dptc_table_mx31.h
  *
  * @brief MX31 dvfs & dptc table file for CKIH clock 26MHz.
  *
diff -uNpr linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc_table_mx31_rev2.h linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc_table_mx31_rev2.h
--- linux-2.6.19.2.orig/drivers/mxc/pm/dvfs_dptc_table_mx31_rev2.h	1969-12-31 17:00:00.000000000 -0700
+++ linux-2.6.19.2/drivers/mxc/pm/dvfs_dptc_table_mx31_rev2.h	2007-04-25 17:37:52.000000000 -0600
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2004-2006 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+/*!
+ * @file dvfs_dptc_table_mx31_rev2.h
+ *
+ * @brief MX31 dvfs & dptc table file for MX31 2.0
+ *
+ * @ingroup PM
+ */
+#ifndef __DVFS_DPTC_TABLE_MX3_REV2_H__
+#define __DVFS_DPTC_TABLE_MX3_REV2_H__
+
+#define NUM_OF_FREQS 4
+#define NUM_OF_WP    17
+
+/*!
+ * Default DPTC table definition.
+ * The table doesn't use PLL switch, because on DDR boards
+ * PLL switch is not possible due to HW issue.
+ * For SDR boards new table can be loaded.
+ *
+ * The table keeps the same voltage of 3.5V for frequencies lower than 399MHz.
+ * Theoretically we don't need DPTC for these frequencies,
+ * but we have to keep DPTC enabled for fluent DVFS switching
+ * back to high frequency.
+ */
+static char *default_table_str_rev2 = "WORKING POINT 17\n\
+\n\
+# mc13783 switcher SW values for each working point\n\
+# The first line is for WP of highest voltage\n\
+# The first column is for highest frequency\n\
+#  SW1A      SW1A DVS   SW1B DVS   SW1B STANDBY\n\
+WP 0x1d      0xc        0xc        0xc\n\
+WP 0x1c      0xc        0xc        0xc\n\
+WP 0x1b      0xc        0xc        0xc\n\
+WP 0x1a      0xc        0xc        0xc\n\
+WP 0x19      0xc        0xc        0xc\n\
+WP 0x18      0xc        0xc        0xc\n\
+WP 0x17      0xc        0xc        0xc\n\
+WP 0x16      0xc        0xc        0xc\n\
+WP 0x15      0xc        0xc        0xc\n\
+WP 0x14      0xc        0xc        0xc\n\
+WP 0x13      0xc        0xc        0xc\n\
+WP 0x12      0xc        0xc        0xc\n\
+WP 0x11      0xc        0xc        0xc\n\
+WP 0x10      0xc        0xc        0xc\n\
+WP 0xf       0xc        0xc        0xc\n\
+WP 0xe       0xc        0xc        0xc\n\
+WP 0xd       0xc        0xc        0xc\n\
+\n\
+#    pll_sw_up pll_sw_down pdr_up     pdr_down    pll_up     pll_down   vscnt\n\
+# 532MHz\n\
+FREQ 0         1           0xff871e58 0xff871650 0x0033280c 0x00331c23  1\n\
+# 399MHz\n\
+FREQ 1         1           0xff871e58 0xff871e59 0x0033280c 0x0033280c  4\n\
+# 266MHz\n\
+FREQ 0         0           0xff871e58 0xff871e5b 0x0033280c 0x0033280c  4\n\
+# 133MHz\n\
+FREQ 0         0           0xff871e58 0xff871e5b 0x0033280c 0x0033280c  4\n\
+\n\
+# 532MHz\n\
+DCVR 0xffc00000 0x95c00000 0xffc00000 0xe5800000\n\
+DCVR 0xffc00000 0x95e3e8e4 0xffc00000 0xe5b6fda0\n\
+DCVR 0xffc00000 0x95e3e8e4 0xffc00000 0xe5b6fda0\n\
+DCVR 0xffc00000 0x95e3e8e8 0xffc00000 0xe5f70da4\n\
+DCVR 0xffc00000 0x9623f8e8 0xffc00000 0xe6371da8\n\
+DCVR 0xffc00000 0x966408f0 0xffc00000 0xe6b73db0\n\
+DCVR 0xffc00000 0x96e428f4 0xffc00000 0xe7776dbc\n\
+DCVR 0xffc00000 0x976448fc 0xffc00000 0xe8379dc8\n\
+DCVR 0xffc00000 0x97e46904 0xffc00000 0xe977ddd8\n\
+DCVR 0xffc00000 0x98a48910 0xffc00000 0xeab81de8\n\
+DCVR 0xffc00000 0x9964b918 0xffc00000 0xebf86df8\n\
+DCVR 0xffc00000 0xffe4e924 0xffc00000 0xfff8ae08\n\
+DCVR 0xffc00000 0xffe5192c 0xffc00000 0xfff8fe1c\n\
+DCVR 0xffc00000 0xffe54938 0xffc00000 0xfff95e2c\n\
+DCVR 0xffc00000 0xffe57944 0xffc00000 0xfff9ae44\n\
+DCVR 0xffc00000 0xffe5b954 0xffc00000 0xfffa0e58\n\
+DCVR 0xffc00000 0xffe5e960 0xffc00000 0xfffa6e70\n\
+\n\
+# 266MHz\n\
+DCVR 0xffc00000 0x95c00000 0xffc00000 0xe5800000\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe5cdc368\n\
+DCVR 0xffc00000 0x9609023c 0xffc00000 0xe60dc36c\n\
+DCVR 0xffc00000 0x9649023c 0xffc00000 0xe68dd36c\n\
+DCVR 0xffc00000 0x96c9023c 0xffc00000 0xe74dd370\n\
+DCVR 0xffc00000 0x97491240 0xffc00000 0xe80de374\n\
+DCVR 0xffc00000 0x97c92240 0xffc00000 0xe94df374\n\
+DCVR 0xffc00000 0x98892244 0xffc00000 0xea8e0378\n\
+DCVR 0xffc00000 0x99493248 0xffc00000 0xebce137c\n\
+DCVR 0xffc00000 0xffc93248 0xffc00000 0xffce3384\n\
+DCVR 0xffc00000 0xffc9424c 0xffc00000 0xffce4388\n\
+DCVR 0xffc00000 0xffc95250 0xffc00000 0xffce538c\n\
+DCVR 0xffc00000 0xffc96250 0xffc00000 0xffce7390\n\
+DCVR 0xffc00000 0xffc97254 0xffc00000 0xffce8394\n\
+DCVR 0xffc00000 0xffc98258 0xffc00000 0xffcea39c\n\
+\n\
+# 133MHz\n\
+DCVR 0xffc00000 0x95c00000 0xffc00000 0xe5800000\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe5cdc368\n\
+DCVR 0xffc00000 0x9609023c 0xffc00000 0xe60dc36c\n\
+DCVR 0xffc00000 0x9649023c 0xffc00000 0xe68dd36c\n\
+DCVR 0xffc00000 0x96c9023c 0xffc00000 0xe74dd370\n\
+DCVR 0xffc00000 0x97491240 0xffc00000 0xe80de374\n\
+DCVR 0xffc00000 0x97c92240 0xffc00000 0xe94df374\n\
+DCVR 0xffc00000 0x98892244 0xffc00000 0xea8e0378\n\
+DCVR 0xffc00000 0x99493248 0xffc00000 0xebce137c\n\
+DCVR 0xffc00000 0xffc93248 0xffc00000 0xffce3384\n\
+DCVR 0xffc00000 0xffc9424c 0xffc00000 0xffce4388\n\
+DCVR 0xffc00000 0xffc95250 0xffc00000 0xffce538c\n\
+DCVR 0xffc00000 0xffc96250 0xffc00000 0xffce7390\n\
+DCVR 0xffc00000 0xffc97254 0xffc00000 0xffce8394\n\
+DCVR 0xffc00000 0xffc98258 0xffc00000 0xffcea39c\n\
+\n\
+# 133MHz\n\
+DCVR 0xffc00000 0x95c00000 0xffc00000 0xe5800000\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe58dc368\n\
+DCVR 0xffc00000 0x95c8f238 0xffc00000 0xe5cdc368\n\
+DCVR 0xffc00000 0x9609023c 0xffc00000 0xe60dc36c\n\
+DCVR 0xffc00000 0x9649023c 0xffc00000 0xe68dd36c\n\
+DCVR 0xffc00000 0x96c9023c 0xffc00000 0xe74dd370\n\
+DCVR 0xffc00000 0x97491240 0xffc00000 0xe80de374\n\
+DCVR 0xffc00000 0x97c92240 0xffc00000 0xe94df374\n\
+DCVR 0xffc00000 0x98892244 0xffc00000 0xea8e0378\n\
+DCVR 0xffc00000 0x99493248 0xffc00000 0xebce137c\n\
+DCVR 0xffc00000 0xffc93248 0xffc00000 0xffce3384\n\
+DCVR 0xffc00000 0xffc9424c 0xffc00000 0xffce4388\n\
+DCVR 0xffc00000 0xffc95250 0xffc00000 0xffce538c\n\
+DCVR 0xffc00000 0xffc96250 0xffc00000 0xffce7390\n\
+DCVR 0xffc00000 0xffc97254 0xffc00000 0xffce8394\n\
+DCVR 0xffc00000 0xffc98258 0xffc00000 0xffcea39c\n\
+";
+
+#endif
