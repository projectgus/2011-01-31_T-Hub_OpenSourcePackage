# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_1 =  \
@CAIRO_HAS_BEOS_SURFACE_TRUE@	cairo-boilerplate-beos.cpp \
@CAIRO_HAS_BEOS_SURFACE_TRUE@	cairo-boilerplate-beos-private.h
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__append_2 =  \
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@	cairo-boilerplate-directfb.c \
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@	cairo-boilerplate-directfb-private.h
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_3 =  \
@CAIRO_HAS_GLITZ_SURFACE_TRUE@	cairo-boilerplate-glitz.c \
@CAIRO_HAS_GLITZ_SURFACE_TRUE@	cairo-boilerplate-glitz-private.h
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_4 = $(GLITZ_AGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_5 = $(GLITZ_EGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_6 = $(GLITZ_GLX_LIBS)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_7 = $(GLITZ_WGL_LIBS)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__append_8 = cairo-boilerplate-pdf.c \
@CAIRO_HAS_PDF_SURFACE_TRUE@	cairo-boilerplate-pdf.h \
@CAIRO_HAS_PDF_SURFACE_TRUE@	cairo-boilerplate-pdf-private.h
@CAIRO_HAS_PS_SURFACE_TRUE@am__append_9 = cairo-boilerplate-ps.c \
@CAIRO_HAS_PS_SURFACE_TRUE@	cairo-boilerplate-ps.h \
@CAIRO_HAS_PS_SURFACE_TRUE@	cairo-boilerplate-ps-private.h
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__append_10 =  \
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@	cairo-boilerplate-quartz.c \
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@	cairo-boilerplate-quartz-private.h
@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_11 = cairo-boilerplate-svg.c \
@CAIRO_HAS_SVG_SURFACE_TRUE@	cairo-boilerplate-svg.h \
@CAIRO_HAS_SVG_SURFACE_TRUE@	cairo-boilerplate-svg-private.h
@CAIRO_HAS_TEST_SURFACES_TRUE@am__append_12 = cairo-boilerplate-test-surfaces.c \
@CAIRO_HAS_TEST_SURFACES_TRUE@	cairo-boilerplate-test-surfaces-private.h
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_13 =  \
@CAIRO_HAS_WIN32_SURFACE_TRUE@	cairo-boilerplate-win32.c \
@CAIRO_HAS_WIN32_SURFACE_TRUE@	cairo-boilerplate-win32-printing.c \
@CAIRO_HAS_WIN32_SURFACE_TRUE@	cairo-boilerplate-win32-private.h
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_14 = -lwinspool
@CAIRO_HAS_XCB_SURFACE_TRUE@am__append_15 = cairo-boilerplate-xcb.c \
@CAIRO_HAS_XCB_SURFACE_TRUE@	cairo-boilerplate-xcb-private.h
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__append_16 = cairo-boilerplate-xlib.c \
@CAIRO_HAS_XLIB_SURFACE_TRUE@	cairo-boilerplate-xlib.h \
@CAIRO_HAS_XLIB_SURFACE_TRUE@	cairo-boilerplate-xlib-private.h
subdir = boilerplate
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__DEPENDENCIES_1 =
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
libcairoboilerplate_la_DEPENDENCIES = $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
am__libcairoboilerplate_la_SOURCES_DIST = cairo-boilerplate.c \
	cairo-boilerplate.h cairo-boilerplate-getopt.c \
	cairo-boilerplate-getopt.h cairo-boilerplate-scaled-font.h \
	xmalloc.c xmalloc.h cairo-boilerplate-beos.cpp \
	cairo-boilerplate-beos-private.h cairo-boilerplate-directfb.c \
	cairo-boilerplate-directfb-private.h cairo-boilerplate-glitz.c \
	cairo-boilerplate-glitz-private.h cairo-boilerplate-pdf.c \
	cairo-boilerplate-pdf.h cairo-boilerplate-pdf-private.h \
	cairo-boilerplate-ps.c cairo-boilerplate-ps.h \
	cairo-boilerplate-ps-private.h cairo-boilerplate-quartz.c \
	cairo-boilerplate-quartz-private.h cairo-boilerplate-svg.c \
	cairo-boilerplate-svg.h cairo-boilerplate-svg-private.h \
	cairo-boilerplate-test-surfaces.c \
	cairo-boilerplate-test-surfaces-private.h \
	cairo-boilerplate-win32.c cairo-boilerplate-win32-printing.c \
	cairo-boilerplate-win32-private.h cairo-boilerplate-xcb.c \
	cairo-boilerplate-xcb-private.h cairo-boilerplate-xlib.c \
	cairo-boilerplate-xlib.h cairo-boilerplate-xlib-private.h
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__objects_1 = libcairoboilerplate_la-cairo-boilerplate-beos.lo
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__objects_2 = cairo-boilerplate-directfb.lo
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__objects_3 =  \
@CAIRO_HAS_GLITZ_SURFACE_TRUE@	cairo-boilerplate-glitz.lo
@CAIRO_HAS_PDF_SURFACE_TRUE@am__objects_4 = cairo-boilerplate-pdf.lo
@CAIRO_HAS_PS_SURFACE_TRUE@am__objects_5 = cairo-boilerplate-ps.lo
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__objects_6 =  \
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@	cairo-boilerplate-quartz.lo
@CAIRO_HAS_SVG_SURFACE_TRUE@am__objects_7 = cairo-boilerplate-svg.lo
@CAIRO_HAS_TEST_SURFACES_TRUE@am__objects_8 = cairo-boilerplate-test-surfaces.lo
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__objects_9 =  \
@CAIRO_HAS_WIN32_SURFACE_TRUE@	cairo-boilerplate-win32.lo \
@CAIRO_HAS_WIN32_SURFACE_TRUE@	cairo-boilerplate-win32-printing.lo
@CAIRO_HAS_XCB_SURFACE_TRUE@am__objects_10 = cairo-boilerplate-xcb.lo
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__objects_11 =  \
@CAIRO_HAS_XLIB_SURFACE_TRUE@	cairo-boilerplate-xlib.lo
am_libcairoboilerplate_la_OBJECTS = cairo-boilerplate.lo \
	cairo-boilerplate-getopt.lo xmalloc.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11)
libcairoboilerplate_la_OBJECTS = $(am_libcairoboilerplate_la_OBJECTS)
libcairoboilerplate_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcairoboilerplate_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcairoboilerplate_la_SOURCES)
DIST_SOURCES = $(am__libcairoboilerplate_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAIROPERF_LIBS = @CAIROPERF_LIBS@
CAIRO_CFLAGS = @CAIRO_CFLAGS@
CAIRO_LDADD = @CAIRO_LDADD@
CAIRO_LIBS = @CAIRO_LIBS@
CAIRO_NONPKGCONFIG_CFLAGS = @CAIRO_NONPKGCONFIG_CFLAGS@
CAIRO_NONPKGCONFIG_LIBS = @CAIRO_NONPKGCONFIG_LIBS@
CAIRO_REQUIRES = @CAIRO_REQUIRES@
CAIRO_VERSION_MAJOR = @CAIRO_VERSION_MAJOR@
CAIRO_VERSION_MICRO = @CAIRO_VERSION_MICRO@
CAIRO_VERSION_MINOR = @CAIRO_VERSION_MINOR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FIND = @FIND@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_CONFIG = @FREETYPE_CONFIG@
FREETYPE_LIBS = @FREETYPE_LIBS@
GLITZ_AGL_CFLAGS = @GLITZ_AGL_CFLAGS@
GLITZ_AGL_LIBS = @GLITZ_AGL_LIBS@
GLITZ_EGL_CFLAGS = @GLITZ_EGL_CFLAGS@
GLITZ_EGL_LIBS = @GLITZ_EGL_LIBS@
GLITZ_GLX_CFLAGS = @GLITZ_GLX_CFLAGS@
GLITZ_GLX_LIBS = @GLITZ_GLX_LIBS@
GLITZ_WGL_CFLAGS = @GLITZ_WGL_CFLAGS@
GLITZ_WGL_LIBS = @GLITZ_WGL_LIBS@
GREP = @GREP@
GS = @GS@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBRSVG_CFLAGS = @LIBRSVG_CFLAGS@
LIBRSVG_LIBS = @LIBRSVG_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTP = @LTP@
LTP_GENHTML = @LTP_GENHTML@
LT_CURRENT_MINUS_AGE = @LT_CURRENT_MINUS_AGE@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG_REQUIRES = @PKGCONFIG_REQUIRES@
PKG_CONFIG = @PKG_CONFIG@
POPPLER_CFLAGS = @POPPLER_CFLAGS@
POPPLER_LIBS = @POPPLER_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHTOOL = @SHTOOL@
STRIP = @STRIP@
VERSION = @VERSION@
VERSION_INFO = @VERSION_INFO@
XARGS = @XARGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
directfb_CFLAGS = @directfb_CFLAGS@
directfb_LIBS = @directfb_LIBS@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
glitz_CFLAGS = @glitz_CFLAGS@
glitz_LIBS = @glitz_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pixman_CFLAGS = @pixman_CFLAGS@
pixman_LIBS = @pixman_LIBS@
png_CFLAGS = @png_CFLAGS@
png_LIBS = @png_LIBS@
png_REQUIRES = @png_REQUIRES@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
xcb_CFLAGS = @xcb_CFLAGS@
xcb_LIBS = @xcb_LIBS@
xlib_CFLAGS = @xlib_CFLAGS@
xlib_LIBS = @xlib_LIBS@
xlib_xrender_CFLAGS = @xlib_xrender_CFLAGS@
xlib_xrender_LIBS = @xlib_xrender_LIBS@
EXTRA_DIST = Makefile.win32
EXTRA_LTLIBRARIES = libcairoboilerplate.la
libcairoboilerplate_la_SOURCES = cairo-boilerplate.c \
	cairo-boilerplate.h cairo-boilerplate-getopt.c \
	cairo-boilerplate-getopt.h cairo-boilerplate-scaled-font.h \
	xmalloc.c xmalloc.h $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_8) $(am__append_9) \
	$(am__append_10) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_15) $(am__append_16)
libcairoboilerplate_la_LIBADD = $(top_builddir)/src/libcairo.la \
	$(CAIRO_LDADD) $(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7) $(am__append_14)
# BeOS system headers trigger this warning
@CAIRO_HAS_BEOS_SURFACE_TRUE@libcairoboilerplate_la_CXXFLAGS = -Wno-multichar

# We're using _GNU_SOURCE to get the prototype for asprintf. This may
# not be the most portable approach, but it is pragmatic and I'm
# willing to do something cleaner as soon as it causes someone a
# problem.
INCLUDES = \
	-D_GNU_SOURCE				\
	-I$(srcdir)				\
	-I$(top_srcdir)/pixman/src		\
	-I$(top_builddir)/src			\
	-I$(top_srcdir)/src			\
	$(CAIRO_CFLAGS)

CLEANFILES = \
	$(EXTRA_LTLIBRARIES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  boilerplate/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  boilerplate/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libcairoboilerplate.la: $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_DEPENDENCIES) 
	$(libcairoboilerplate_la_LINK)  $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-directfb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-getopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-glitz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-pdf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-ps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-quartz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-svg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-test-surfaces.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-win32-printing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-win32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-xcb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-xlib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcairoboilerplate_la-cairo-boilerplate-beos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmalloc.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libcairoboilerplate_la-cairo-boilerplate-beos.lo: cairo-boilerplate-beos.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_la_CXXFLAGS) $(CXXFLAGS) -MT libcairoboilerplate_la-cairo-boilerplate-beos.lo -MD -MP -MF $(DEPDIR)/libcairoboilerplate_la-cairo-boilerplate-beos.Tpo -c -o libcairoboilerplate_la-cairo-boilerplate-beos.lo `test -f 'cairo-boilerplate-beos.cpp' || echo '$(srcdir)/'`cairo-boilerplate-beos.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcairoboilerplate_la-cairo-boilerplate-beos.Tpo $(DEPDIR)/libcairoboilerplate_la-cairo-boilerplate-beos.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cairo-boilerplate-beos.cpp' object='libcairoboilerplate_la-cairo-boilerplate-beos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_la_CXXFLAGS) $(CXXFLAGS) -c -o libcairoboilerplate_la-cairo-boilerplate-beos.lo `test -f 'cairo-boilerplate-beos.cpp' || echo '$(srcdir)/'`cairo-boilerplate-beos.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


check test: libcairoboilerplate.la
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
