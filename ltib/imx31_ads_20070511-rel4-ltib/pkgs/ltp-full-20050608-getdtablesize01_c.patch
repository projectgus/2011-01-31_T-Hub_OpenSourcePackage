Tue Aug 15 2006 Stuart Hughes <stuarth@freescale.com>

This is a fix for the following error seen with gcc-4.1:

make[4]: Entering directory `/home/seh/ltib_bsps/rigoletto/rpm/BUILD/ltp-full-20050608/testcases/kernel/syscalls/getdtablesize'
gcc -Wall  -I../../include -g -Wall -I../../../../include    getdtablesize01.c -L../../../../lib -lltp  -o getdtablesize01
In file included from /home/seh/ltib_bsps/rigoletto/rootfs/usr/lib//include/linux/fs.h:19,
                 from getdtablesize01.c:45:
/home/seh/ltib_bsps/rigoletto/rootfs/usr/lib//include/linux/prio_tree.h:22: error: expected specifier-qualifier-list before 'pgoff_t'
/home/seh/ltib_bsps/rigoletto/rootfs/usr/lib//include/linux/prio_tree.h:27: error: expected declaration specifiers or '...' before 'pgoff_t'


This patch was generated by diffing agains the unmodified source file getdtablesize01.c downloaded here: http://ltp.cvs.sourceforge.net/*checkout*/ltp/ltp/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c?revision=1.6



diff --exclude CVS -uNr ltp-full-20050608/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c ltp-full-20050608.modified/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c
--- ltp-full-20050608/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c	2005-06-08 11:11:14.000000000 -0500
+++ ltp-full-20050608.modified/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c	2006-08-15 08:07:38.000000000 -0500
@@ -37,42 +37,49 @@
  **********************************************************/
 
 #include <stdio.h>
-#include <unistd.h>
 #include <errno.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
-#include <linux/fs.h>
+#include <sys/time.h>
+#include <sys/resource.h>
+#include <unistd.h>
 #include "test.h"
 #include "usctest.h"
 
-extern void setup();
-extern void cleanup();
+void setup();
+void cleanup();
 
 char *TCID="getdtablesize01";     /* Test program identifier.    */
 int TST_TOTAL=1;          	  /* Total number of test cases. */
 extern int Tst_count;      	  /* Test Case counter for tst_* routines */
 
-main()
+int main()
 {
- int table_size,loop,fd,count = 0,cnt = 0;
+ 	int table_size,loop,fd,count = 0;
+	int max_val_opfiles;
+  struct rlimit rlp;
+
 
  setup();
  table_size = getdtablesize();
+	getrlimit(RLIMIT_NOFILE,&rlp);
+	max_val_opfiles = (rlim_t)rlp.rlim_cur;
+
 
  tst_resm(TINFO,"Maximum number of files a process can have opened is %d",table_size);
- tst_resm(TINFO,"Checking with the value set in fs.h....INR_OPEN");
+ tst_resm(TINFO,"Checking with the value returned by getrlimit...RLIMIT_NOFILE");
 
- if (table_size == INR_OPEN)
- tst_resm(TPASS,"got correct dtablesize, value is %d",INR_OPEN);
+ if (table_size == max_val_opfiles)
+ tst_resm(TPASS,"got correct dtablesize, value is %d",max_val_opfiles);
  else
  {
-   tst_resm(TFAIL,"got incorrect table size, value is %d",INR_OPEN);
+   tst_resm(TFAIL,"got incorrect table size, value is %d",max_val_opfiles);
    cleanup();
  }
 
- tst_resm(TINFO,"Checking Max num of files that can be opened by a process. Should get INR_OPEN-1");
- for(loop=1;loop<=INR_OPEN;loop++)
+ tst_resm(TINFO,"Checking Max num of files that can be opened by a process.Should be: RLIMIT_NOFILE - 1");
+ for(loop=1;loop<=max_val_opfiles;loop++)
  {
   fd = open("/etc/hosts",O_RDONLY);
 #ifdef DEBUG
@@ -84,13 +91,17 @@
   count = fd;
  }
 
-//Now the max files opened should be 1024 - 1 = 1023 , why ? read getdtablesize man page
+//Now the max files opened should be RLIMIT_NOFILE - 1 , why ? read getdtablesize man page
 
- if(count == (INR_OPEN - 1) )
- tst_resm(TPASS,"%d = %d",count, (INR_OPEN - 1));
+ if (count > 0)
+   close(count);
+ if(count == (max_val_opfiles -1) )
+ tst_resm(TPASS,"%d = %d",count, (max_val_opfiles - 1));
  else
- tst_resm(TFAIL,"%d != %d",count, (INR_OPEN - 1));
+ tst_resm(TFAIL,"%d != %d",count, (max_val_opfiles - 1));
  cleanup();
+
+ return EXIT_SUCCESS;
 }
 /***************************************************************
  * setup() - performs all ONE TIME setup for this test.
